name: Build & Release

on:
  push:
    branches:
      - master
    tags:
      - "**"
  workflow_dispatch:
  pull_request:

permissions:
  packages: write
  contents: write
  id-token: write

jobs:
  ##################################
  # 1) Test Job (like your original)
  ##################################
  test:
    name: pytest
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/huggingface
            ~/nltk_data
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # If you have extras or dev dependencies
          pip install -e .[dev]

      - name: Lint with ruff
        run: ruff check --output-format=github .

      - name: Run tests
        env:
          PYTHONPATH: .
        run: pytest

  ##################################
  # 2) Build Wheel & Release to PyPI
  ##################################
  build_wheel:
    name: build wheel
    runs-on: ubuntu-22.04
    needs: test  # This ensures the wheel builds only after tests pass
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: build
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          python -m build

      - name: Release GitHub artifact
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz

      - name: Release to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  ##################################
  # 3) Build & Push Container Image
  ##################################
  build_container:
    name: build container
    runs-on: ubuntu-22.04
    needs: test  # Wait for the tests to pass before building the container
    # If you only want to build the container on direct pushes and not pull requests,
    # you can limit it with: if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set build env
        run: |
          echo "GHCR_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >>${GITHUB_ENV}

      - name: Build and push container
        uses: docker/build-push-action@v5
        with:
          file: Containerfile  # or Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.GHCR_OWNER }}/taranis-sentiment-bot:latest
            ghcr.io/${{ env.GHCR_OWNER }}/taranis-sentiment-bot:${{ github.ref_name }}
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=true
          cache-from: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-sentiment-bot:latest
          cache-to: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-sentiment-bot:latest,mode=max
